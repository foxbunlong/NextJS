// Create package.json file with empty brackets. Then run this command
npm install react react-dom next

// Change name of index.html to index.jsx
// Move index file to pages directory

// Add scripts to package.json
// Run command to start server
npm run dev

// need to restart the development server when you add pages/_app.js.

// Some useful library
yarn add classnames // use to toggle classname easily
npm install -D tailwindcss autoprefixer postcss // use for css
npm install -D sass // Support to use scss and sass

// hydration - Each generated HTML is associated with minimal JavaScript code necessary for that page. 
// When a page is loaded by the browser, its JavaScript code runs and makes the page fully interactive.

// Next support to choose pre-rendering form
// - Static Generation
// - Server-side rendering

// export async function getStaticProps() -> call this in class to get data at build time (prefeching)
// getStaticProps only runs on server-side
// getStaticProps can only be exported from a page

// 'posts' folder at root is not the same as 'pages/posts'

// Library to parse markdown file
npm install gray-matter

// Assigned name folders: <root>/pages

// Server-side rendering using getServerSideProps
// getServerSideProps runs at request time so time to first byte (TTFB) will be slower than getStaticProps

// Client-side rendering - statically generate parts of the page at request time. Then when page loads, fetch the rest of data

// SWR - Hooks for data fetching
yarn add swr

// Generated page's path will follow format: /posts/[id]
// posts is top-level directory

// File named as [id].js is defined as dynamic routes
// getStaticPaths() => Return a list of possible value for id
// getStaticProps({ params }) => Fetch necessary data for the blog post using params.id
// To make [id].js to work, the returned value of function getStaticPaths should follow the pattern as:
// [
//   {
//     params: {
//       id: '<id 1>'
//     }
//   },
//   {
//     params: {
//       id: '<id 2>'
//     }
//   }
// ]

// To render markdown content
yarn add remark remark-html
// remark inquired as async function
// dangerouslySetInnerHTML - innerHTML in the browser DOM preventing cross-site scripting attack

// To format date
yarn add date-fns